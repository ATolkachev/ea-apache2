From 0768f7df5ed909b72f25561596e52bf28b177938 Mon Sep 17 00:00:00 2001
From: Kevin Shaum <kevin.shaum@cpanel.net>
Date: Mon, 22 Jul 2013 13:24:17 -0500
Subject: [PATCH 2/3] 2.2.17_cpanel_mailman_suexec

cPanel custom patch that allows suexec to run mailman as the httpd user,
instead of the user executing it.  This patch has been around since
Apache 1.x.  While I can't find any reference to this anywhere, the
oldest FogBugz case I can find which at least mentions it (in passing)
is: http://fogbugz.cpanel.net/default.asp?835
---
 support/suexec.c | 72 ++++++++++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 60 insertions(+), 12 deletions(-)

diff --git a/support/suexec.c b/support/suexec.c
index 3bdda96..c2ead08 100644
--- a/support/suexec.c
+++ b/support/suexec.c
@@ -271,8 +271,11 @@ static void clean_env(void)
 int main(int argc, char *argv[])
 {
     int userdir = 0;        /* ~userdir flag             */
+    int mailman = 0;        /* mailman path              */
     uid_t uid;              /* user information          */
+    uid_t httpuid;          /* http user                */
     gid_t gid;              /* target group placeholder  */
+    gid_t httpgid;          /* http group                */
     char *target_uname;     /* target user name          */
     char *target_gname;     /* target group name         */
     char *target_homedir;   /* target home directory     */
@@ -285,6 +288,7 @@ int main(int argc, char *argv[])
     struct group *gr;       /* group entry holder        */
     struct stat dir_info;   /* directory info holder     */
     struct stat prg_info;   /* program info holder       */
+    char *cpanel_mailman_patch_ver = "CPANEL_MAILMAN_SUEXEC_PATCH_VERSION_2.0_END";
 
     /*
      * Start with a "clean" environment
@@ -295,7 +299,8 @@ int main(int argc, char *argv[])
      * Check existence/validity of the UID of the user
      * running this program.  Error out if invalid.
      */
-    uid = getuid();
+    uid = httpuid = getuid();
+    httpgid = getgid();
     if ((pw = getpwuid(uid)) == NULL) {
         log_err("crit: invalid uid: (%lu)\n", (unsigned long)uid);
         exit(102);
@@ -395,6 +400,20 @@ int main(int argc, char *argv[])
     }
 
     /*
+     * Check for mailman
+     */
+    if (getcwd(cwd, AP_MAXPATH) == NULL) {
+	    log_err("emerg: cannot get current working directory\n");
+	    exit(111);
+    }
+
+    if ((strncmp(cwd, "/usr/local/cpanel/3rdparty/mailman/cgi-bin", 42)) == 0) {
+        mailman = 1;
+        target_uname = "mailman";
+        target_gname = "mailman";
+    }
+
+    /*
      * Error out if the target username is invalid.
      */
     if (strspn(target_uname, "1234567890") != strlen(target_uname)) {
@@ -502,17 +521,36 @@ int main(int argc, char *argv[])
      * Initialize the group access list for the target user,
      * and setgid() to the target group. If unsuccessful, error out.
      */
-    if (((setgid(gid)) != 0) || (initgroups(actual_uname, gid) != 0)) {
-        log_err("failed to setgid (%lu: %s)\n", (unsigned long)gid, cmd);
-        exit(109);
+    if (mailman) {
+        /*
+         * Mailman runs with the permissions of the webserver as if suexec
+         * was not turned on.  We need all the uid/gid validation to happen
+         * for the mailman user, but we want to run as the webserver user.
+         */
+        if (((setgid(httpgid)) != 0) || (initgroups(AP_HTTPD_USER, httpgid) != 0)) {
+            log_err("failed to setgid (%ld: %s)\n", httpgid, cmd);
+            exit(109);
+        }
+
+        if ((setuid(httpuid)) != 0) {
+            log_err("failed to setuid (%ld: %s)\n", uid, cmd);
+            exit(110);
+        }
     }
+    else {
+    
+        if (((setgid(gid)) != 0) || (initgroups(actual_uname, gid) != 0)) {
+            log_err("failed to setgid (%ld: %s)\n", gid, cmd);
+            exit(109);
+        }
 
-    /*
-     * setuid() to the target user.  Error out on fail.
-     */
-    if ((setuid(uid)) != 0) {
-        log_err("failed to setuid (%lu: %s)\n", (unsigned long)uid, cmd);
-        exit(110);
+        /*
+         * setuid() to the target user.  Error out on fail.
+         */
+        if ((setuid(uid)) != 0) {
+            log_err("failed to setuid (%ld: %s)\n", uid, cmd);
+            exit(110);
+        }
     }
 
     /*
@@ -567,7 +605,7 @@ int main(int argc, char *argv[])
     /*
      * Error out if cwd is writable by others.
      */
-    if ((dir_info.st_mode & S_IWOTH) || (dir_info.st_mode & S_IWGRP)) {
+    if ((dir_info.st_mode & S_IWOTH) || ((dir_info.st_mode & S_IWGRP) && !mailman)) {
         log_err("directory is writable by others: (%s)\n", cwd);
         exit(116);
     }
@@ -590,13 +628,23 @@ int main(int argc, char *argv[])
 
     /*
      * Error out if the file is setuid or setgid.
+     * SETUID target executables are only allowed for mailman.
      */
-    if ((prg_info.st_mode & S_ISUID) || (prg_info.st_mode & S_ISGID)) {
+    if ((prg_info.st_mode & S_ISUID) && !mailman) {
         log_err("file is either setuid or setgid: (%s/%s)\n", cwd, cmd);
         exit(119);
     }
 
     /*
+     * SETGID target executables are only allowed for mailman.
+     * The verification that the group is actually mailman happens
+     * in the next if block
+     */
+    if ((prg_info.st_mode & S_ISGID) && !mailman) {
+        log_err("file is either setuid or setgid: (%s/%s)\n", cwd, cmd);
+        exit(119);
+    }
+    /*
      * Error out if the target name/group is different from
      * the name/group of the cwd or the program.
      */
-- 
1.8.3.4

