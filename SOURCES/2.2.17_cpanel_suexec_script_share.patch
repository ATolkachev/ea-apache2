From 092b0f0cf557158a8cbfb8ea5023acccc2572152 Mon Sep 17 00:00:00 2001
From: Kevin Shaum <kevin.shaum@cpanel.net>
Date: Mon, 22 Jul 2013 13:22:05 -0500
Subject: [PATCH] 2.2.17_cpanel_suexec_script_share

cpanel-specific patch that adds a feature which makes it possible to run
"shared" scripts. Suppose you are a systems admin for large hosting
provider and you want to offer your customers some standard scripts.
The scripts would normally cause a security violation because the
uid of the process varies from the uid owner of the script.

This patch makes it possible to "trust" a certain user/group. Look below
to define the user/group ID.

The most specific use of this script is, cgi-sys/universal-redirect.cgi
in cPanel/WHM.
---
 support/suexec.c | 39 ++++++++++++++++++++++++++++++---------
 support/suexec.h | 23 +++++++++++++++++++++++
 2 files changed, 53 insertions(+), 9 deletions(-)

diff --git a/support/suexec.c b/support/suexec.c
index 2817125..78a2741 100644
--- a/support/suexec.c
+++ b/support/suexec.c
@@ -128,11 +128,11 @@ static const char *const safe_env_lst[] =
     NULL
 };
 
-static void log_err(const char *fmt,...) 
+static void log_err(const char *fmt,...)
     __attribute__((format(printf,1,2)));
-static void log_no_err(const char *fmt,...)  
+static void log_no_err(const char *fmt,...)
     __attribute__((format(printf,1,2)));
-static void err_output(int is_error, const char *fmt, va_list ap) 
+static void err_output(int is_error, const char *fmt, va_list ap)
     __attribute__((format(printf,2,0)));
 
 static void err_output(int is_error, const char *fmt, va_list ap)
@@ -573,12 +573,33 @@ int main(int argc, char *argv[])
         (gid != dir_info.st_gid) ||
         (uid != prg_info.st_uid) ||
         (gid != prg_info.st_gid)) {
-        log_err("target uid/gid (%lu/%lu) mismatch "
-                "with directory (%lu/%lu) or program (%lu/%lu)\n",
-                (unsigned long)uid, (unsigned long)gid,
-                (unsigned long)dir_info.st_uid, (unsigned long)dir_info.st_gid,
-                (unsigned long)prg_info.st_uid, (unsigned long)prg_info.st_gid);
-        exit(120);
+           /* <--- begin changed code ap1 suexec_standard.patch --->
+            *
+            * This patch adds a possibility to use "shared" scripts on a
+            * shared webhosting box.
+            */
+#ifdef TRUSTED_USERS_SCRIPTS
+       if ((atoi(SUEXEC_TRUSTED_USER) != prg_info.st_uid) ||
+           (atoi(SUEXEC_TRUSTED_GROUP) != prg_info.st_gid) || ((strncmp(cwd, "/usr/local/cpanel/cgi-sys/", 26) != 0) && (strncmp(cwd, "/usr/local/bandmin/", 19) != 0) )) {
+
+          log_err("error: target uid/gid (%ld/%ld) mismatch "
+                  "with directory (%ld/%ld) or program (%ld/%ld) or trusted user (%d/%d)\n",
+                  uid, gid,
+                  dir_info.st_uid, dir_info.st_gid,
+                  prg_info.st_uid, prg_info.st_gid, atoi(SUEXEC_TRUSTED_USER), atoi(SUEXEC_TRUSTED_GROUP));
+          exit(120);
+       }
+#else
+       log_err("target uid/gid (%lu/%lu) mismatch "
+               "with directory (%lu/%lu) or program (%lu/%lu)\n",
+               (unsigned long)uid, (unsigned long)gid,
+               (unsigned long)dir_info.st_uid, (unsigned long)dir_info.st_gid,
+               (unsigned long)prg_info.st_uid, (unsigned long)prg_info.st_gid);
+       exit(120);
+#endif
+       /*
+        * end changed code
+        */
     }
     /*
      * Error out if the program is not executable for the user.
diff --git a/support/suexec.h b/support/suexec.h
index 07bb7bb..14d21e0 100644
--- a/support/suexec.h
+++ b/support/suexec.h
@@ -40,6 +40,29 @@
 #endif
 
 /*
+ * READ THIS BEFORE CONTINUING!!
+ *
+ * The patch below adds a feature which makes it possible to run "shared"
+ * scripts. Suppose you are a systems admin for $large hosting provider and
+ * you want to offer your customers some standard scripts. These scripts would
+ * cause a security violation based on the uid owner of the script.
+ *
+ * This patch makes it possible to "trust" a certain user/group. Look below to
+ * define the user/group ID.
+ *
+ * Uncomment the define to make it actually happen.
+ *
+ * patch added as ap1 suexec_standard.patch clone
+ */
+
+#define TRUSTED_USERS_SCRIPTS
+
+#ifdef TRUSTED_USERS_SCRIPTS
+#define SUEXEC_TRUSTED_USER "0"
+#define SUEXEC_TRUSTED_GROUP "10"
+#endif
+
+/*
  * UID_MIN -- Define this as the lowest UID allowed to be a target user
  *            for suEXEC.  For most systems, 500 or 100 is common.
  */
-- 
2.2.0

